name: Release

on:
  push:
    tags:
      - 'v*' # Triggers on any tag starting with 'v' (e.g., v1.0.0, v1.0.0-beta.1)

permissions:
  contents: write
  pull-requests: read

jobs:
  # Run CI checks before release
  ci-check:
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: pnpm build

      - name: Check types
        run: pnpm tsc --noEmit

  release:
    runs-on: ubuntu-latest
    needs: ci-check
    if: github.ref_type == 'tag'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full history for changelog generation

      - name: Determine release type
        id: release-type
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT

          # Check if this is a prerelease (contains alpha, beta, rc, or has a hyphen)
          if [[ "$TAG_NAME" =~ (alpha|beta|rc|-) ]]; then
            echo "is_prerelease=true" >> $GITHUB_OUTPUT
            echo "release_name=$TAG_NAME (Pre-release)" >> $GITHUB_OUTPUT
          else
            echo "is_prerelease=false" >> $GITHUB_OUTPUT
            echo "release_name=$TAG_NAME" >> $GITHUB_OUTPUT
          fi

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")

          if [ -z "$PREV_TAG" ]; then
            # If no previous tag, get all commits
            CHANGELOG=$(git log --pretty=format:"- %s (%h)" --no-merges)
          else
            # Get commits since the previous tag
            CHANGELOG=$(git log $PREV_TAG..HEAD --pretty=format:"- %s (%h)" --no-merges)
          fi

          # Save changelog to output
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.release-type.outputs.tag_name }} \
            --title "${{ steps.release-type.outputs.release_name }}" \
            --notes "## Changes in this release

          ${{ steps.changelog.outputs.changelog }}

          ---

          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ steps.changelog.outputs.prev_tag }}...${{ steps.release-type.outputs.tag_name }}" \
            ${{ steps.release-type.outputs.is_prerelease == 'true' && '--prerelease' || '' }}

  publish:
    runs-on: ubuntu-latest
    needs: release
    if: github.ref_type == 'tag'
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@finqu'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: pnpm build

      - name: Configure npm authentication
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" >> ~/.npmrc
          echo "@finqu:registry=https://npm.pkg.github.com" >> ~/.npmrc

      - name: Publish to GitHub Packages
        run: npm publish --access restricted
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
